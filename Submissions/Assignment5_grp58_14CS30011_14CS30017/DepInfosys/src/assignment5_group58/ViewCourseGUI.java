/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment5_group58;

import static assignment5_group58.StartGUI.Coursefilename;
import static assignment5_group58.StartGUI.canDelete;
import static assignment5_group58.StartGUI.courseList;
import static assignment5_group58.StartGUI.viewCourse;
import static assignment5_group58.StartGUI.studentList;
import java.io.Serializable;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author kaustubh
 */
@SuppressWarnings("serial")
public class ViewCourseGUI extends javax.swing.JFrame implements Serializable{

    /**
     * Creates new form ViewItemGUI
     * @param courseList
     * @param studentList
     * @param canDelete
     * @param viewCourse
     */
    public ViewCourseGUI(ArrayList<Course> courseList,ArrayList<Student> studentList,
            int canDelete,Course viewCourse) {
        newinitComponents(courseList,studentList, canDelete, viewCourse);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        DeleteItemButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        DeleteItemButton.setText("Delete");
        DeleteItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteItemButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(backButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DeleteItemButton)
                .addGap(128, 128, 128))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteItemButton, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(backButton))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void newinitComponents(ArrayList<Course> courseList,ArrayList<Student> studentList,
            int canDelete,Course viewCourse) {
        
        String[] columns = {"Name", "Professor", "Credits"};
	int size = courseList.size();
	Object[][] itemObject  = new String[size][3];
		
	int i;
	for(i = 0; i < size ; i++)
	{
		itemObject[i][0] = courseList.get(i).getname();
                itemObject[i][1] = courseList.get(i).getprofessor();
		itemObject[i][2] = Double.toString(courseList.get(i).getcredit());
	}
		
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(itemObject,columns);
        DeleteItemButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        DeleteItemButton.setVisible(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jScrollPane1.setViewportView(jTable1);
        
        if(canDelete == 0)
        {   DeleteItemButton.setVisible(true);
            DeleteItemButton.setText("View Students");
            DeleteItemButton.addActionListener((java.awt.event.ActionEvent evt) -> {
                DeleteItemButtonActionPerformed(evt);
        });
        }
        else if(canDelete==1)
        {   DeleteItemButton.setVisible(true);
            DeleteItemButton.setText("Delete Course");
            DeleteItemButton.addActionListener((java.awt.event.ActionEvent evt) -> {
                DeleteItemButtonActionPerformed(evt);
        });
        }
        
        backButton.setText("Back");
        backButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            backButtonActionPerformed(evt);
        });
        
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(backButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DeleteItemButton)
                .addGap(128, 128, 128))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteItemButton, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(backButton))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>    
    
    private boolean AreEqual(Course a, Course b){
        //if one of the main parameter disagree
        
        return !(!(a.getname().equals(b.getname()))
                ||!(a.getcredit()==b.getcredit())
                ||!(a.getprofessor().equals(b.getprofessor())));
    }
        
    private boolean canRemove(Course viewCourse)
    {
        for(int i = 0;i < studentList.size() ; i++ )
        {
            Student dude = studentList.get(i);
            for(int j = 0; j < dude.subjects.size() ; j++)
            {
                if(AreEqual(viewCourse,dude.subjects.get(j))
                        && dude.status.get(j).equals("current"))
                {
                    return false;
                }
            }
        }
        return true;
    }
    
    private void DeleteItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteItemButtonActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(null,"Can delete is "+canDelete );        
        int select = jTable1.getSelectedRow();
	if(select==-1)
	{
            JOptionPane.showMessageDialog(null, "Select a course first!");
	}
        else if(canDelete==1)
	{
            //first , check if any student is enrolled in a course currently
            viewCourse = courseList.get(select);
            if(canRemove(viewCourse))
            {
                Course remove = courseList.remove(select); 
                JOptionPane.showMessageDialog(null,remove.getname()+" has been removed!");
                WriteCourse newwrite = new WriteCourse(courseList, Coursefilename);
                dispose();
            }
            else{
                JOptionPane.showMessageDialog(null,"Cannot remove "+viewCourse.getname()
                        +" since students are enrolled currently\nTry deleting after all students are graded for the course");
            }
        }
        else if(canDelete==0)
        {
            ViewStudentsGUI viewStud = new ViewStudentsGUI(courseList.get(select),studentList);
            viewStud.setLocationRelativeTo(null);
            viewStud.setVisible(true);
        }
    }//GEN-LAST:event_DeleteItemButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewCourseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ViewCourseGUI(courseList,studentList,canDelete,viewCourse).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteItemButton;
    private javax.swing.JButton backButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
